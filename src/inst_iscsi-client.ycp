/*
|***************************************************************************
|
| Copyright (c) [2012] Novell, Inc.
| All Rights Reserved.
|
| This program is free software; you can redistribute it and/or
| modify it under the terms of version 2 of the GNU General Public License as
| published by the Free Software Foundation.
|
| This program is distributed in the hope that it will be useful,
| but WITHOUT ANY WARRANTY; without even the implied warranty of
| MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   See the
| GNU General Public License for more details.
|
| You should have received a copy of the GNU General Public License
| along with this program; if not, contact Novell, Inc.
|
| To contact Novell about this file by physical or electronic mail,
| you may find current contact information at www.novell.com
|
|***************************************************************************
*/
/**
 * File:	clients/iscsi-client.ycp
 * Package:	Configuration of iscsi-client
 * Summary:	Main file
 * Authors:	Michal Zugec <mzugec@suse.cz>
 *
 * $Id$
 *
 * Main file for iscsi-client configuration. Uses all other files.
 */

{

/***
 * <h3>Configuration of iscsi-client</h3>
 */

textdomain "iscsi-client";

/* The main () */
y2milestone ("----------------------------------------");
y2milestone ("IscsiClient module started");

import "Progress";
import "Report";
import "Summary";
import "ModuleLoading";
import "Packages";
import "Installation";
import "String";
include "iscsi-client/wizards.ycp";

/* main ui function */
any ret = nil;

y2milestone("start iscsid");
SCR::Execute(.target.bash, "mkdir -p /etc/iscsi; touch /etc/iscsi/initiatorname.iscsi; ln -s /etc/iscsi/initiatorname.iscsi /etc/initiatorname.iscsi");
// check initiator name, create if not exists
//WFM::Execute (.local.bash,"test -d /etc/iscsi/ && /bin/cp -a /etc/iscsi/* " + String::Quote(Installation::destdir) + "/etc/iscsi/");
IscsiClientLib::checkInitiatorName();


IscsiClientLib::getiBFT();
y2milestone( "Loading module %1", "iscsi_tcp" );
ModuleLoading::Load("iscsi_tcp", "", "", "", false, true);
IscsiClientLib::LoadOffloadModules();

// start iscsid daemon
IscsiClientLib::startIScsid();

IscsiClientLib::autoLogOn();
// run dialog
ret = MainSequence();
y2debug("MainSequence ret=%1", ret);
// add package open-iscsi to installed system
Packages::addAdditionalPackage("open-iscsi");

/* Finish */
y2milestone("IscsiClient module finished");
y2milestone("----------------------------------------");

return ret;

/* EOF */
}
